<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="starter.data.mapper.RiskMapper">

	
  <select id="findAll" resultType="starter.data.model.Risk">
    SELECT
      rh.id AS riskHeaderId,
      rh.named_Insured AS namedInsured,
      rh.version_number AS versionNumber,
      UPPER(status.name) AS status
    FROM
      risk_header rh,
      status status
    WHERE
      rh.active_flag = 'Y' AND
      status.id = rh.status_id 
    ORDER BY rh.id
  </select>
  
  <select id="findAllBySearchFilter" resultType="starter.data.model.Risk">
    SELECT
      rh.named_Insured AS namedInsured,
      UPPER(status.name) AS status
    FROM
      risk_header rh,
      status status
    WHERE
      rh.active_flag = 'Y' AND
      status.id = rh.status_id
      <if test="statusId != null">
        AND rh.status_id = #{statusId}
      </if>
      <if test="startDate != null">
        AND created_date &gt;= #{startDate}
      </if>
      <if test="endDate != null">
        AND created_date &lt;= #{endDate}
      </if>
    ORDER BY rh.id
  </select>
  
  
  
  <resultMap type="starter.data.model.DataTablesOutput" id="result-output">
    <id property="recordsFiltered" column="recordsFiltered" />
    <result property="recordsTotal" column="recordsTotal"/>
    <collection property="data" ofType="starter.data.model.Risk">
      <result property="namedInsured" column="namedInsured"/>
      <result property="status" column="status"/>
      <result property="createdDate" column="createdDate"/>
    </collection>
  </resultMap>
  
  <select id="findDataTablesOutput" resultMap="result-output">
    SELECT
      recordsTotal AS recordsTotal,
      COUNT(*) OVER() AS recordsFiltered,
      namedInsured AS namedInsured,
      status AS status,
      createdDate AS createdDate
    FROM
      (
        SELECT
          COUNT(*) OVER() AS recordsTotal,
          rh.id AS riskId,
          rh.named_Insured AS namedInsured,
          status.id AS statusId,
          UPPER(status.name) AS status,
          rh.created_date AS createdDate
        FROM
          risk_header rh,
          status status
        WHERE
          rh.active_flag = 'Y' AND
          status.id = rh.status_id
      ) AS rc
    WHERE
      rc.namedInsured is not null
      <if test="searchFilter != null &amp;&amp; searchFilter.statusId != null">
        AND rc.statusId = #{searchFilter.statusId}
      </if>
      <if test="searchFilter != null &amp;&amp; searchFilter.startDate != null">
        AND rc.createdDate &gt;= #{searchFilter.startDate}
      </if>
      <if test="searchFilter != null &amp;&amp; searchFilter.endDate != null">
        AND rc.createdDate &lt;= #{searchFilter.endDate}
      </if>
      <if test="search != null &amp;&amp; search.length() &gt; 0">
        AND UPPER(rc.namedInsured) like UPPER('%'||#{search}||'%')
      </if>
    
      <if test="order != null">
      ORDER BY <if test="order.size == 0">rc.riskId</if>
      <foreach item="item" collection="order" separator=" ">
        <if test="item.column == 0">
          namedInsured <if test="item.dir == 'asc'">ASC</if><if test="item.dir == 'desc'">DESC</if>
        </if>
        <if test="item.column == 1">
          status <if test="item.dir == 'asc'">ASC</if><if test="item.dir == 'desc'">DESC</if>
        </if>
        <if test="item.column == 2">
          createdDate <if test="item.dir == 'asc'">ASC</if><if test="item.dir == 'desc'">DESC</if>
        </if>
      </foreach>
      </if>
   
    <if test="start != null">
      OFFSET #{start}
    </if>
    <if test="length != null">
      LIMIT #{length}
    </if>
  </select>
  
  <select id="findRecordCount" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM
      risk_header rh,
      status status
    WHERE
      rh.active_flag = 'Y' AND
      status.id = rh.status_id
  </select>
 
</mapper>